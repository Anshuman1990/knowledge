WEBVTT

00:01.020 --> 00:06.760
In this lecture we're going to be learning about why we should use a Microsoft template and what it

00:06.760 --> 00:09.160
should contain.

00:09.160 --> 00:16.740
So first of all Microsoft is template is called Project that can be used to start off from when developing.

00:16.770 --> 00:20.030
New Microcircuits that should basically save us time.

00:20.050 --> 00:23.080
So think Gupte are called Project.

00:23.220 --> 00:31.110
Why is it important one thing got any project there is usually a significant amount of time spent creating

00:31.170 --> 00:38.790
project structure and adding set up related code such as security concerns an issue of connections to

00:38.790 --> 00:43.120
databases and referencing towards the acquired libraries.

00:44.760 --> 00:51.120
No in a monolithic or multi-tiered architecture this sort of thing will be seen as negligible in the

00:51.120 --> 00:57.810
long run because it will only be done once or maybe a couple of times but in a Microsoft architecture

00:57.960 --> 01:04.140
where we can have tens or even hundreds of micro services and this set up needs to be done for each

01:04.290 --> 01:08.160
Microcircuits this sort of thing becomes more significant.

01:08.160 --> 01:14.630
And so we should have our micro service template containing similar called required for each Microsoft

01:14.700 --> 01:20.180
is set up to make creating a new Microsoft Project as fast and easy as possible.

01:22.440 --> 01:26.190
The template should contain cross-cutting concerns.

01:26.250 --> 01:33.930
For example set up of the logging and application metrics components and connection set up and configuration

01:34.050 --> 01:40.610
to databases and message brokers can also contain the project structure.

01:40.610 --> 01:47.840
So for example you can include a unit test project inside the macro service templates or maybe a domain

01:47.840 --> 01:50.920
project if you're following domain driven design.

01:51.140 --> 01:57.220
But of course that depends on how you're structuring your code inside each macro service.

01:57.220 --> 02:04.330
You can also include any code that you think will be required in many of your future macros services.

02:04.360 --> 02:10.510
And don't forget that the main objective of the micro service template is to save you time in the future

02:11.260 --> 02:17.050
so it's worth investing a bit of time in this up front as it will pay off later.
